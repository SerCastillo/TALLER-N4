import java.awt.Color;//importamos la libreria awt
import java.awt.event.ActionEvent;//importamos la libreria awt
import java.awt.event.ActionListener;//importamos la libreria awt
import javax.swing.JButton;//importamos libreria swing
import javax.swing.JFrame;//importamos libreria JFrame
import javax.swing.JLabel;//importamos libreria JLabel
import javax.swing.JOptionPane;//importamos libreria Swing

public class TriquiInterfaz extends JFrame implements ActionListener {// utilizamos extends para implementar la libreria JFrame

    JButton iniciar; // definimos el boton iniciar
    JButton tablero[][];
    String jugador1, jugador2;
    int turno = 0;
    JLabel mensaje;// definimos mensaje para colocar algun texto
    Color colorB;

    public TriquiInterfaz() {
        this.setLayout(null);
        mensaje = new JLabel("Juego del triqui");
        mensaje.setBounds(150, 40, 200, 30);//distribucion de las dimnesiones del tablero
        iniciar = new JButton("Iniciar juego");//Se imprime un boton que diga Iniciar juego
        iniciar.setBounds(175, 350, 150, 30);//distribucion de las dimnesiones del tablero
        iniciar.addActionListener(this);
        this.add(iniciar);
        tablero = new JButton[3][3];//Declara al tablero como un boton
        for (int i = 0; i < tablero.length; i++) {
            for (int j = 0; j < tablero.length; j++) {
                tablero[i][j] = new JButton();
                tablero[i][j].setBounds((i + 1) * 80, (j + 1) * 80, 80, 80);
                this.add(tablero[i][j]);
                tablero[i][j].addActionListener(this);
            }
        }
        colorB = tablero[0][0].getBackground();//Declaramos un color para la matriz
    }

    public static void main(String[] args) {//Metodo principal
        TriquiInterfaz ventana = new TriquiInterfaz();
        ventana.setDefaultCloseOperation(3);
        ventana.setSize(500, 500);//dimensiones del tablero
        ventana.setLocationRelativeTo(null);
        ventana.setResizable(false);
        ventana.setTitle("Triqui Sergio Castillo");//Titulo superior del tablero
        ventana.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == iniciar) {//llamamos el metodo iniciar, para comenzar el juego
            turno = 0;
            JOptionPane.showMessageDialog(this, "Iniciando el juego");
            jugador1 = JOptionPane.showInputDialog(this, "Primer jugador ");//imprime el turno del jugador
            jugador2 = JOptionPane.showInputDialog(this, "Segundo jugador ");
            mensaje.setText("Turno del jugador" + jugador1);
            limpiar();//llamamos el metodo limpiar para volver a jugar
        } else {
            JButton boton = (JButton) e.getSource();
            if (turno == 0) {//el turno del jugador 1 es 0
                if (boton.getText().equals("")) {
                    boton.setBackground(Color.BLUE);//le colocamos el color azul a la casilla que seleccione
                    boton.setText("X");//y a continucion en la casilla donde selecciono se coloca una X
                    boton.setEnabled(false);
                    turno = 1;//Luego le toca el turno al jugador 2
                    mensaje.setText("Turno del jugador" + jugador2);
                }
            } else if (turno == 1) {// turno del jugador 2 es 1
                if (boton.getText().equals("")) {
                    boton.setBackground(Color.WHITE);//Asignamos el color blanco a la tecla donde seleccione
                    boton.setText("O");//La marca que colocara sera una O
                    boton.setEnabled(false);
                    turno = 0;//Vuelve el turno del jugador 1
                    mensaje.setText("Turno del jugador 2" + jugador1);
                }
            }
            verificar();//Llamamos el metodo verificar para mirar si alguno gano
        }
    }

    public void verificar() {
        int ganador = 0;
        for (int i = 0; i < 3; i++) {
            if (tablero[0][0].getText().equals("X") && tablero[1][1].getText().equals("X") && tablero[2][2].getText().equals("X")) {
                ganador = 1;//Verifica si coinciden para hacer triqui y hubo jugaador
            }
            if (tablero[0][2].getText().equals("X") && tablero[1][1].getText().equals("X") && tablero[2][0].getText().equals("X")) {
                ganador = 1;//Verifica si coinciden para hacer triquiy hubo ganador
            }
            if (tablero[0][0].getText().equals("X") && tablero[0][1].getText().equals("X") && tablero[0][2].getText().equals("X")) {
                ganador = 1;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[1][0].getText().equals("X") && tablero[1][1].getText().equals("X") && tablero[1][2].getText().equals("X")) {
                ganador = 1;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[2][0].getText().equals("X") && tablero[2][1].getText().equals("X") && tablero[2][2].getText().equals("X")) {
                ganador = 1;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[0][0].getText().equals("X") && tablero[1][0].getText().equals("X") && tablero[2][0].getText().equals("X")) {
                ganador = 1;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[0][1].getText().equals("X") && tablero[1][1].getText().equals("X") && tablero[2][1].getText().equals("X")) {
                ganador = 1;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[0][2].getText().equals("X") && tablero[1][2].getText().equals("X") && tablero[2][2].getText().equals("X")) {
                ganador = 1;//Verifica si coinciden para hacer triqui y hubo ganador
            }

        }
        for (int i = 0; i < 3; i++) {
            if (tablero[0][0].getText().equals("O") && tablero[1][1].getText().equals("O") && tablero[2][2].getText().equals("O")) {
                ganador = 2;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[0][2].getText().equals("O") && tablero[1][1].getText().equals("O") && tablero[2][0].getText().equals("O")) {
                ganador = 2;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[0][0].getText().equals("O") && tablero[0][1].getText().equals("O") && tablero[0][2].getText().equals("O")) {
                ganador = 2;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[1][0].getText().equals("O") && tablero[1][1].getText().equals("O") && tablero[1][2].getText().equals("O")) {
                ganador = 2;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[2][0].getText().equals("O") && tablero[2][1].getText().equals("O") && tablero[2][2].getText().equals("O")) {
                ganador = 2;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[0][0].getText().equals("O") && tablero[1][0].getText().equals("O") && tablero[2][0].getText().equals("O")) {
                ganador = 2;
            }
            if (tablero[0][1].getText().equals("O") && tablero[1][1].getText().equals("O") && tablero[2][1].getText().equals("O")) {
                ganador = 2;//Verifica si coinciden para hacer triqui y hubo ganador
            }
            if (tablero[0][2].getText().equals("O") && tablero[1][2].getText().equals("O") && tablero[2][2].getText().equals("O")) {
                ganador = 2;//Verifica si coinciden para hacer triqui y hubo ganador
            }
        }
        if (ganador == 1) { //Se le asigna un 1 si el jugador 1 gano
            JOptionPane.showMessageDialog(this, "Jugador 1 ganó");

        }
        if (ganador == 2) {//Se le asigna un 2 si el jugador 2 gano
            JOptionPane.showMessageDialog(this, "Jugador 2 ganó");
        }

    }

    public void limpiar() {//Borra las reespuestas de los jugadores para volver a jugar
        for (int i = 0; i < tablero.length; i++) {
            for (int j = 0; j < tablero.length; j++) {
                tablero[i][j].setEnabled(true);
                tablero[i][j].setText("");
                tablero[i][j].setBackground(colorB);//El color retorna a los que estaba en el principio del juego
            }
        }
    }
}
